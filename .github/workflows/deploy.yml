name: Deploy

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: khonsulabs/build-rust:latest
      options: "--security-opt seccomp=unconfined"

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: true
          ssh-key: ${{ secrets.BOTSU_PRIVATE_SSH_KEY }}

      - name: Run tests
        run: |
          echo "DATABASE_URL=postgres://postgres:postgres@postgres:$POSTGRES_PORT/postgres" >> .env
          # cd web
          # cargo test --target wasm32-unknown-unknown --release --verbose
          cd native
          cargo run --bin migrator --release
          cargo test --release --verbose
        env:
          # Fake value for the encryption key for this step, because any branch can run this
          BASWS_CLIENT_ENCRYPTION_KEY: "abcdefghijklmnopqrstuvwxzy123456"
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Build
        env:
          BASWS_CLIENT_ENCRYPTION_KEY: ${{ secrets.CLIENT_ENCRYPTION_KEY }}
        run: |
          cd web
          sed -i s/CACHEBUSTER/`uuidgen`/g static/bootstrap.html
          cargo make build -p release

          cd ../native
          cargo build --bin cosmicverge-server --release
          cargo run --bin cosmicverge-server --release -- generate-assets ../web/static/

      - name: Configure Production
        if: github.ref == 'refs/heads/main'
        env:
          DOTENVFILE: ${{ secrets.DOTENVFILE }}
        run: echo "$DOTENVFILE" > .env

      - uses: kciter/aws-ecr-action@v1
        if: github.ref == 'refs/heads/main'
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: khonsulabs/cosmicverge
          region: us-east-1
          tags: latest,sha-${{ github.sha }}

      - name: Deploy API
        if: github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          aws cloudformation wait stack-update-complete --stack-name cosmicverge-server
          aws cloudformation update-stack --stack-name cosmicverge-server --use-previous-template --capabilities CAPABILITY_NAMED_IAM --parameters ParameterKey=VpcId,UsePreviousValue=true ParameterKey=PrivateSubnetIds,UsePreviousValue=true ParameterKey=PublicSubnetIds,UsePreviousValue=true ParameterKey=DeployedTag,ParameterValue=sha-${{ github.sha }}
